(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{502:function(a,t,s){"use strict";s.r(t);var v=s(4),r=Object(v.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"nodejs-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-是什么"}},[a._v("#")]),a._v(" NodeJS 是什么")]),a._v(" "),s("p",[a._v("NodeJS 是一个运行在 V8 引擎上的一个 JavaScript 运行环境，并不是一种语言")]),a._v(" "),s("h2",{attrs:{id:"nodejs-的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-的特点"}},[a._v("#")]),a._v(" NodeJS 的特点")]),a._v(" "),s("h3",{attrs:{id:"非阻塞-i-o"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非阻塞-i-o"}},[a._v("#")]),a._v(" 非阻塞 I/O")]),a._v(" "),s("p",[a._v("I/O 的意思是计算机的 输入/输出")]),a._v(" "),s("ul",[s("li",[a._v("阻塞 ： 计算机逐条执行指令，如果一条指令等待时间过长，进程休眠等待。导致后面的指令无法及时的执行，我们称之为阻塞")]),a._v(" "),s("li",[a._v("非阻塞： I/O 时函数立即返回，进程不需要等待 I/O 完成")])]),a._v(" "),s("h3",{attrs:{id:"事件驱动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件驱动"}},[a._v("#")]),a._v(" 事件驱动")]),a._v(" "),s("ul",[s("li",[a._v("I/O 等异步操作结束后的通知")]),a._v(" "),s("li",[a._v("观察者模式")])]),a._v(" "),s("h3",{attrs:{id:"nodejs-的单线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-的单线程"}},[a._v("#")]),a._v(" NodeJS 的单线程")]),a._v(" "),s("p",[a._v("单线程只针对主进程，I/O 操作系统底层多线程调度\n单线程并不是单进程")]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"为什么选择-nodejs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么选择-nodejs"}},[a._v("#")]),a._v(" 为什么选择 NodeJS ?")]),a._v(" "),s("ul",[s("li",[a._v("前端职责范围变大，统一开发体验")]),a._v(" "),s("li",[a._v("在处理高并发，I/O 密集场景 (服务器) 性能优势明显")])]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"常用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用场景"}},[a._v("#")]),a._v(" 常用场景")]),a._v(" "),s("ul",[s("li",[a._v("Web Server")]),a._v(" "),s("li",[a._v("本地代码的构建")]),a._v(" "),s("li",[a._v("实用工具的开发")])]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"知识拓展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识拓展"}},[a._v("#")]),a._v(" 知识拓展")]),a._v(" "),s("h3",{attrs:{id:"cpu-密集-与-i-o-密集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cpu-密集-与-i-o-密集"}},[a._v("#")]),a._v(" CPU 密集 与 I/O 密集")]),a._v(" "),s("ul",[s("li",[a._v("CPU 密集：压缩、解压、加密、解密")]),a._v(" "),s("li",[a._v("I/O 密集： 文件操作、网络操作、数据库")])]),a._v(" "),s("h3",{attrs:{id:"进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[a._v("#")]),a._v(" 进程")]),a._v(" "),s("ul",[s("li",[a._v("进程：是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位")]),a._v(" "),s("li",[a._v("多进程：启动多个进程，多个进程可以一块执行多个任务")])]),a._v(" "),s("h3",{attrs:{id:"线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[a._v("#")]),a._v(" 线程")]),a._v(" "),s("ul",[s("li",[a._v("线程：进程内一个相对独立的、可调度的执行单元，与同属一个进程的线程共享进程的资源")]),a._v(" "),s("li",[a._v("多线程：启动一个进程，在一个进程内启动多个线程，这样多个线程也可以一块执行多个任务")])])])}),[],!1,null,null,null);t.default=r.exports}}]);